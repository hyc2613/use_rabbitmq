<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyc.userabbitmq.mapper.OrderMessageMapper" >
  <resultMap id="BaseResultMap" type="com.hyc.userabbitmq.model.OrderMessage" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="retry_times" property="retryTimes" jdbcType="INTEGER" />
    <result column="status" property="status" typeHandler="com.hyc.userabbitmq.enums.MessageStatusTypeHandler" />
    <result column="next_retry_time" property="nextRetryTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List">
    id, message, retry_times, status, next_retry_time, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from order_message
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <insert id="insertOrder" parameterType="com.hyc.userabbitmq.model.OrderMessage" >
    insert into order_message (id, message, retry_times,
      status, next_retry_time, create_time,
      update_time)
    values (#{id,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{retryTimes,jdbcType=INTEGER},
      #{status, typeHandler=com.hyc.userabbitmq.enums.MessageStatusTypeHandler}, #{nextRetryTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <select id="listSendingMessage" resultMap="BaseResultMap">
          select <include refid="Base_Column_List" />
              from order_message bml
              where status = '0'
        <![CDATA[
              and next_retry_time <= sysdate()
        ]]>
    </select>

  <update id="update4ReSend" >
    update order_message bml
    set bml.re_try_times = bml.re_try_times + 1,
      bml.update_time = #{updateTime, jdbcType=TIMESTAMP}
    where bml.id = #{messageId,jdbcType=VARCHAR}
  </update>

  <update id="updateSendStatus" >
    update order_message bml
    set bml.status = #{messageStatusEnum,typeHandler=com.hyc.userabbitmq.enums.MessageStatusTypeHandler},
          bml.update_time = #{updateTime, jdbcType=TIMESTAMP}
    where bml.id = #{messageId,jdbcType=VARCHAR}
  </update>

</mapper>